{"version":3,"sources":["components/Navbar.js","components/Header.js","pages/Home.js","pages/ScreenPrinting.js","pages/Embroidery.js","pages/About.js","components/Form.js","pages/Contact.js","components/Footer.js","App.js","registerServiceWorker.js","index.js"],"names":["Navbar","useState","navbarOpen","setNavbarOpen","closeMenu","className","to","id","window","location","pathname","onClick","style","display","Header","src","alt","Home","ScreenPrinting","Embroidery","About","Form","fullName","email","subject","message","setMessage","handleInputChange","e","event","target","name","value","test","substring","length","emailOnly","React","htmlFor","type","onChange","rows","document","getElementById","reset","Contact","Footer","App","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.20684248.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar() {\n\n  const [navbarOpen, setNavbarOpen] = useState(false)\n\n  const handleToggle = () => {\n    setNavbarOpen(!navbarOpen)\n  }\n\n  const closeMenu = () => {\n    setNavbarOpen(false)\n  }\n\n  \n  const hamNavClick = () => {\n    setNavbarOpen(!navbarOpen)\n    // console.log('mobilehamnavclick');\n  }\n\n  return (\n  <>\n    <nav className=\"desktop-navigation\">\n        <ul className=\"links\"> \n            <li><Link to=\"./\" id={window.location.pathname === \"./\" ? \"active\" : \"nooo\"}>Home</Link></li>\n            <li><Link to=\"./ScreenPrinting\">Screen Printing</Link></li>\n            <li><Link to=\"./Embroidery\">Embroidery</Link></li>\n            <li><Link to=\"./About\">About US</Link></li>\n            <li><Link to=\"./Contact\">Contact</Link></li> \n        </ul>\n    </nav>\n\n    <div className=\"icon-burger\" onClick={hamNavClick}>\n      <div className=\"line\"></div>\n      <div className=\"line\"></div>\n      <div className=\"line\"></div>\n    </div>\n\n    <nav className=\"mobile-navigation\">\n      <ul className=\"mobile-links\" style={navbarOpen ? {display:\"flex\"} : {display:\"none\"}}>          \n        <li><Link to=\"./\" onClick={closeMenu}>Home</Link></li>\n        <li><Link to=\"./ScreenPrinting\" onClick={closeMenu}>Screen Printing</Link></li>\n        <li><Link to=\"./Embroidery\" onClick={closeMenu}>Embroidery</Link></li>\n        <li><Link to=\"./About\" onClick={closeMenu}>About US</Link></li>\n        <li><Link to=\"./Contact\" onClick={closeMenu}>Contact</Link></li>\n      </ul>\n    </nav>\n  </>\n\n  \n  );\n}\n\nexport default Navbar;","import React from \"react\";\nimport Navbar from \"./Navbar\";\n\nfunction Header() {\n\n\n  return (\n    <header>\n      <div className=\"header-logo-container\">\n        <img \n        src=\"/images/phoenix-logo.png\" \n        alt=\"Phoenix Logo\"\n        className=\"header-logo\"\n        />\n      </div>\n\n      <Navbar />\n    </header>\n  \n  );\n}\n\nexport default Header;","import React from \"react\";\n\n\n\n\nfunction Home() {\n  return (\n    <div className=\"home-container\">\n        \n        \n        <div className=\"\">\n            <p>\n                \n            </p>\n        </div>\n      \n\n    </div>\n  \n  );\n}\n\nexport default Home;","import React from 'react'\n\nfunction ScreenPrinting() {\n    return (\n        <div className=\"screenprinting-container\">\n            <div className=\"screen-primary-text-container\">\n                <p className=\"screen-primary-text\">\n                    Screen printing is the most common way to decorate custom apparel.\n                    <br />\n                    It is perfect for larger orders \n                    <br />\n                    If you want your design on 25 or 500 shirts this is going to be the best option for you\n                </p>\n            </div>\n\n            <div className=\"screen-img-container\">\n                <img \n                src=\"\" \n                alt=\"screen printing\" \n                className=\"screen-img\"\n                />\n                <img \n                src=\"\" \n                alt=\"screen printing\" \n                className=\"screen-img\"\n                />\n                <img \n                src=\"\" \n                alt=\"screen printing\" \n                className=\"screen-img\"\n                />\n            </div>\n\n            <div className=\"screen-secondary-text-container\">\n                <p className=\"screen-secondary-text\"> \n                For best results we commonly use what is referred to in the industry as a \n                spot color process of printing. This means that each color is separated onto an \n                individual screen before printing. Through this process it is very common for \n                screen printing jobs to have one through four colors in a design. \n            <br /><br />\n                There is an additional charge for every screen that is set up \n                (Color that is used in the design) this is why it is very common to see 2 or 3 \n                colored logos for screen printing apparel.\n                </p>\n            </div>\n\n            <div className=\"screen-colorchart-container\">\n                <img \n                src=\"/images/phoenix-screenprinting-colorchart.png\" \n                alt=\"screen printing color chart\" \n                className=\"screen-colorchart-img\"\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default ScreenPrinting\n","import React from 'react'\n\nfunction Embroidery() {\n    return (\n        <div className=\"embroidery-container\">\n            EMB\n        </div>\n    )\n}\n\nexport default Embroidery\n","import React from \"react\";\n\n\nfunction About() {\n  return (\n    <div>\n\n        <div className=\"about-text\">\n            <p>\n                Insert paragraph here\n        \n            </p>\n        </div>\n\n\n        <div className=\"email\">\n            <h3>email@gmail.com</h3>\n        </div>\n\n\n    </div>\n  \n  );\n}\n\nexport default About;","import React, {useState, useEffect} from 'react';\n// import API from \"../../utils/API\";\n\nfunction Form() {\n\n    // useEffect(() => {\n    //     window.scrollTo(0, 0)\n    //     loadStatus();\n    // }, []);\n\n//   function loadStatus() {\n\n//     API.authenticateUser()\n//       .then((response) => {\n//         setLoginStatus(response.data.login);\n//       })\n//       .catch((err) => console.log(err));\n//   }\n\n    const [message, setMessage] = useState({\n        fullName: \"\",\n        email: \"\",\n        subject: \"\",\n        message: \"\",\n    })\n\n    function alphabeticalOnly(event) {\n        const alphabeticalValidation = /^[a-zA-Z ]+$/\n        const azResult = alphabeticalValidation.test(event);\n        return azResult;\n    }\n    \n    function emailOnly(event) {\n        const emailValidation = /^[a-zA-Z0-9@.]*$/\n        const emailResult = emailValidation.test(event);\n        return emailResult\n    }\n\n    function handleInputChange(e) {\n\n        if(e.target.name === \"fullName\") {\n          const checkName = alphabeticalOnly(e.target.value);\n          if(checkName === false) {\n            e.target.value = e.target.value.substring(0, e.target.value.length - 1);\n          }\n        }\n    \n        if(e.target.name === \"email\") {\n          const checkEmail = emailOnly(e.target.value);\n          if(checkEmail === false) {\n            e.target.value = e.target.value.substring(0, e.target.value.length - 1);\n          }\n        }\n    \n        const { name, value } = e.target;\n        setMessage({ ...message, [name]: value });\n    }\n\n    // function handleFormSubmit(e) {\n    //     e.preventDefault();\n    \n    //     if(!message.fullName || !message.email || !message.subject || !message.message) {\n    //       alert(\"You are missing a required input field. Please try again.\");\n    //       return;\n    //     }\n    \n    //       API.sendMessage({\n    //         fullName: message.fullName,\n    //         email: message.email,\n    //         subject: message.subject,\n    //         message: message.subject\n    //       })\n    //       .then((res) => {\n    //         if (res.status === 200) {\n    //             setOpen(true);\n    //             setSuccessAlert({displaySnackbar: true});\n    //             clearForm();\n    //         }\n    //       }, () => {\n    //         setOpen(true);\n    //         setFailAlert({displaySnackbar: true});\n    //       })\n    //       .catch((err) => \n    //       console.log(err))\n    // }\n\n    // function Alert(props) {\n    //     return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    // }\n    \n    const [open, setOpen] = React.useState(true);\n    \n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n    \n        setOpen(false);\n        setSuccessAlert(false);\n        setFailAlert(false)\n    }\n\n    function clearForm() {\n\n        setMessage({\n          fullName: \"\",\n          email: \"\",\n          subject: \"\",\n          message: \"\",\n        });\n    \n        document.getElementById(\"message-form\").reset();\n    \n      }\n\n    return (\n        <div className=\"contact-form-container\">\n\n            <form className=\"contact-form\" id=\"message-form\">\n                \n                <label htmlFor=\"contact-form-label-name\">Full Name</label>\n                <input \n                    type=\"text\" \n                    name=\"fullName\"\n                    // placeholder=\"Full Name\"\n                    className=\"contact-form-name\" \n                    onChange={handleInputChange}\n                />\n                <label htmlFor=\"contact-form-label-email\">Email</label>\n                <input \n                    type=\"email\" \n                    name=\"email\"\n                    // placeholder=\"Email\"\n                    className=\"contact-form-email\"\n                    onChange={handleInputChange} \n                />\n                <label htmlFor=\"contact-form-label-subject\">Subject</label>\n                <input \n                    type=\"text\" \n                    name=\"subject\"\n                    // placeholder=\"Subject\"\n                    className=\"contact-form-subject\"\n                    onChange={handleInputChange} \n                />\n                <label htmlFor=\"contact-form-label-message\">Message</label>\n                <textarea \n                    name=\"message\"\n                    // placeholder=\"Message\" \n                    className=\"contact-form-message\"\n                    onChange={handleInputChange} \n                    // cols=\"30\" \n                    rows=\"10\"\n                ></textarea>\n\n            </form>\n\n            <button \n                type=\"submit\" \n                className=\"contact-form-submit\"\n                onClick={clearForm}>\n                \n            Send Message\n            </button>\n            \n        </div>\n    )\n}\n\nexport default Form;\n","import React from 'react';\nimport Form from '../components/Form.js';\n\nfunction Contact() {\n    return (\n        <div>\n            <div className=\"contact-text-container\">\n                <h1 className=\"contact-text-header\">Contact</h1> \n                <p className=\"contact-text-paragraph\">\n                </p>\n            </div>\n             \n            <div className=\"dividers-line\"></div>\n            \n            <Form />\n            \n        </div>\n    )\n}\n\nexport default Contact\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    \n    <footer className=\"footer\">\n      <img \n      className=\"footer-logo\"\n      src=\"/images/phoenix-logo.png\" \n      alt=\"Phoenix Logo\"\n     />\n\n      <h1 className=\"footer-text\">PhoenixCustomPrinting@gmail.com</h1>\n\n      <div className=\"footer-icons\">\n\n      </div>\n\n    </footer>\n  \n  );\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route  } from 'react-router-dom';\nimport Header from './components/Header.js';\nimport Navbar from './components/Navbar.js';\nimport Home from './pages/Home.js';\nimport ScreenPrinting from './pages/ScreenPrinting.js';\nimport Embroidery from './pages/Embroidery.js';\nimport About from './pages/About.js';\nimport Contact from './pages/Contact.js';\nimport Footer from './components/Footer.js';\n// import NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Router>\n      <Header/>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/ScreenPrinting\" component={ScreenPrinting} />\n          <Route exact path=\"/Embroidery\" component={Embroidery} />\n          <Route exact path=\"/About\" component={About} />  \n          <Route exact path=\"/Contact\" component={Contact} />  \n          {/* <Route component={NotFound} /> */}\n      </Router>\n\n      <Footer/>\n      \n\n      \n    </div>\n  );\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport './assets/scss/main.css';\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}